name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      run_e2e:
        description: "Run Playwright e2e (@smoke)"
        required: false
        default: "false"
      e2e_grep:
        description: "Playwright grep (e.g. @ui)"
        required: false
        default: "@smoke"

jobs:
  gate:
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache npm + Playwright browsers
        uses: actions/cache@v4
        with:
          path: |
            ui/node_modules
            ~\AppData\Local\ms-playwright
          key: ${{ runner.os }}-npm-${{ hashFiles('ui/package-lock.json') }}

      - name: Cache Python venv
        uses: actions/cache@v4
        with:
          path: backend\python\.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('backend/python/requirements-dev.txt') }}

      - name: Install Playwright browsers (Windows)
        working-directory: ui
        run: npx playwright install

      - name: Quality gate
        shell: pwsh
        run: |
          $args = @()
          if ("${{ github.event.inputs.run_e2e }}" -eq "true") {
            $grep = if ("${{ github.event.inputs.e2e_grep }}") { "${{ github.event.inputs.e2e_grep }}" } else { "@smoke" }
            $args += @('-RunE2E','-E2EGrep', $grep)
          }
          ./scripts/run-quality.ps1 @args

      - name: Upload Playwright report
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: ui/playwright-report
          if-no-files-found: ignore
